clear functions %clear all%%%%%%%%% INITIALIZE PARAMETERS %%%%%%%Mechanical parameters.m1  =  1;    m2 =  1;  % massesI1  =  0.5;  I2 = 0.5;  % inertias about cmsl   =  1;              % length of linksa   =  .5;            % dist. from O to G1 and E to G2 (see figures)g   =  10;% Initial conditions and other settings.framespersec=50;  %if view is not speeded or slowed in dbpend_animateT=8;             %duration of animation  in secondstspan=linspace(0,T,T*framespersec);q1    = 0; %angle made by link1 with verticalu1    = 0;        %abslolute velocity of link1   q2    = pi/30 ;      %angle made by link2 with verticalu2    = 0;        %abslolute velocity of link2z0=[q1 u1 q2 u2]';options=odeset('abstol',1e-9,'reltol',1e-9);%%%%%%% INTEGRATOR or ODE SOLVER %%%%%%%[t z] = ode113('dbpend_rhs',tspan,z0,options, ...                          m1, m2, I1, I2, l, a, g);%%%%%%% POSTPROCESSING %%%%%%%%%%%%%%%%% A routine to animate the results% To speed up change the framespersecondfigure(1)for i=1:length(tspan)    pause(.01)        xm1=l*sin(z(i,1));%-l*sin(z(i,1));%modified by cxc in Jan. 2018    ym1=-l*cos(z(i,1));    xm2=l*sin(z(i,1)) + l*sin(z(i,1)+z(i,3));%xm1-l*sin(z(i,3));%modified by cxc in Jan. 2018    ym2=-l*cos(z(i,1))-l*cos(z(i,1)+z(i,3));       plot([0],[0],'ko','MarkerSize',3); %pivot point    hold on    plot([0 xm1],[0 ym1],'r','LineWidth',2);% first pendulum    plot([xm1 xm2],[ym1 ym2],'b','LineWidth',2);% second pendulum    axis([-2*l 2*l -2*l 2*l]);    axis square    hold off    F(i)=getframe(gcf);endv = VideoWriter('dbpend.avi');open(v);writeVideo(v,F);close(v);%Get some plotsfigure(2)plot(t,z(:,1),t,z(:,3));xlabel('time (s)'); ylabel('position (rad)');%%% energy check, Total energy should be constant%%% here we plot successive difference in total energies (should be zero)%%% NOTE: %%% a) energy difference can not be better than the ode tolerance. %%%    This is one way to check if simulations are alright. %%% b) This is not true if the system is actuated or there are dissipative%%%    forces like dampers. The TE here consists of conservative forces. for i=1:length(t)    [KE(i), PE(i)] = dbpend_energy(t(i),z(i,:),m1, m2, I1, I2, l, a, g);endTE = KE + PE;TE_diff = diff(TE);figure(3)plot(t(1:end-1),TE_diff)% figure(4)% plot(t,z(:,1),t,.1*cos(sqrt(g/l)*t));% xlabel('time (s)'); ylabel('position (rad)'); 